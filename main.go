package main

import "testing"

type Test struct {
	first  int
	second int
	out    int
}

func TestSum(t *testing.T) {
	// –Ω–∞–±–æ—Ä —Ç–µ—Å—Ç–æ–≤
	cases := []struct {
		// –∏–º—è —Ç–µ—Å—Ç–∞
		name string
		// –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ –≤—Ö–æ–¥ —Ç–µ—Å—Ç–∏—Ä—É–µ–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
		values []byte
		// –∂–µ–ª–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
		want  int
		want2 error
	}{
		// —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ ‚Ññ1
		{
			name:   "positive values",
			values: []byte("Hello, World!"),
			want:   13,
		},
		// —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ ‚Ññ2
		{
			name:   "mixed values",
			values: []byte("–ü—Ä–∏–≤–µ—Ç, –≤–µ—Å—å –º–∏—Ä?"),
			want:   17,
		},
		{
			name:   "mixed values2",
			values: []byte("üòäüåüüéâüåàüéà"),
			want:   5,
		},
		{
			name:   "fgfg",
			values: []byte("Hello\xffWorld"),
			want:   0,
		},
	}
	// –ø–µ—Ä–µ–±–æ—Ä –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
	for _, tc := range cases {
		tc := tc
		// –∑–∞–ø—É—Å–∫ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞
		t.Run(tc.name, func(t *testing.T) {
			// —Ç–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é Sum
			got, _ := GetUTFLength(tc.values)
			// if err != nil {
			// 	t.Fatalf("Error: %v", err)
			// }
			// –ø—Ä–æ–≤–µ—Ä–∏–º –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
			if got != tc.want {
				t.Errorf("Sum(%v) = %v; want %v", tc.values, got, tc.want)
			}
		})
	}
}
